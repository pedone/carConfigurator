@using KFZ_Konfigurator.Helper;
@using KFZ_Konfigurator.ViewModels;
@using KFZ_Konfigurator.Views;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ConfigurationViewKind viewKind = ConfigurationViewKind.ModelSelection;
    Type modelType = Model.GetType();
    if (modelType == typeof(EngineSettingsPageViewModel))
    {
        viewKind = ConfigurationViewKind.EngineSettings;
    }
    else if (modelType == typeof(AccessoriesPageViewModel))
    {
        viewKind = ConfigurationViewKind.Accessories;
    }
    else if (modelType == typeof(ExteriorPageViewModel))
    {
        viewKind = ConfigurationViewKind.Exterior;
    }
    else if (modelType == typeof(ConfigurationOverviewPageViewModel))
    {
        viewKind = ConfigurationViewKind.Overview;
    }

    bool isModelSelection = viewKind == ConfigurationViewKind.ModelSelection;
    string modelHeader = null;
    if (!isModelSelection)
    {
        var activeModel = SessionData.ActiveConfiguration.CarModel;
        if (activeModel == null)
        {
            throw new Exception("Model is not set");
        }
        modelHeader = $"{activeModel.Series} {activeModel.BodyType.ToString()} {activeModel.Year}";
    }

    string slide1Class = string.Empty, slide2Class = string.Empty, slide3Class = string.Empty, slide4Class = string.Empty;
    switch (viewKind)
    {
        case ConfigurationViewKind.ModelSelection:
            slide1Class = "active";
            break;
        case ConfigurationViewKind.EngineSettings:
            slide2Class = "active";
            break;
        case ConfigurationViewKind.Accessories:
            slide3Class = "active";
            break;
        case ConfigurationViewKind.Exterior:
            slide4Class = "active";
            break;
        case ConfigurationViewKind.Overview:
            slide1Class = "active";
            break;
        default:
            //make sure there's always at least one slide active, otherwise the carousel is hidden
            slide1Class = "active";
            break;
    }
}

@RenderBody()

@section ConfigurationHeader {
    <div class="bg-light">
        <div id="configurationHeaderCarousel" class="container text-overlap-container carousel slide" data-ride="carousel" data-interval="15000">
            <ol class="carousel-indicators dark">
                <li data-target="#configurationHeaderCarousel" data-slide-to="0" class="@slide1Class"></li>
                <li data-target="#configurationHeaderCarousel" data-slide-to="1" class="@slide2Class"></li>
                <li data-target="#configurationHeaderCarousel" data-slide-to="2" class="@slide3Class"></li>
                <li data-target="#configurationHeaderCarousel" data-slide-to="3" class="@slide4Class"></li>
                <li data-target="#configurationHeaderCarousel" data-slide-to="4"></li>
                <li data-target="#configurationHeaderCarousel" data-slide-to="5"></li>
            </ol>
            <div class="carousel-inner">
                <div class="carousel-item @slide1Class">
                    <img class="img-fluid" src="~/Resources/Images/2018A4AngularFront.png">
                </div>
                <div class="carousel-item @slide2Class">
                    <img class="img-fluid" src="~/Resources/Images/2018A4Engine.png">
                </div>
                <div class="carousel-item @slide3Class">
                    <img class="img-fluid" src="~/Resources/Images/2018A4Front.png">
                </div>
                <div class="carousel-item @slide4Class">
                    <img class="img-fluid" src="~/Resources/Images/2018A4Side.png">
                </div>
                <div class="carousel-item">
                    <img class="img-fluid" src="~/Resources/Images/2018A4AngularRear.png">
                </div>
                <div class="carousel-item">
                    <img class="img-fluid" src="~/Resources/Images/2018A4Rear.png">
                </div>
            </div>
            @if (!isModelSelection)
            {
                <h3 class="overlap-top-left hidden-xs">@modelHeader</h3>
            }
        </div>
    </div>
    <div class="navbar bg-dark navbar-dark navbar-expand">
        <div class="container @MiscHelper.If(isModelSelection, "invisible")">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#configurationNavbarToggleContent">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse" id="configurationNavbarToggleContent">
                <div class="navbar-nav">
                    <a href="@Url.RouteUrl(Constants.Routes.EngineSettings)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.EngineSettings, "active")">@LocalizationManager.Localize("ConfigurationLayout_EngineSettings_Button")</a>
                    <a href="@Url.RouteUrl(Constants.Routes.Accessories)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.Accessories, "active")">@LocalizationManager.Localize("ConfigurationLayout_Accessories_Button")</a>
                    <a href="@Url.RouteUrl(Constants.Routes.Exterior)" class="nav-item nav-link @MiscHelper.If(viewKind == ConfigurationViewKind.Exterior, "active")">@LocalizationManager.Localize("ConfigurationLayout_Exterior_Button")</a>
                </div>
            </div>
        </div>
    </div>
}

@if (!isModelSelection)
{
    var activeModel = SessionData.ActiveConfiguration.CarModel;
    @section CartOverview {
        <div class="card rounded-0 container">
            <div class="card-body">
                <a href="@Url.RouteUrl(Constants.Routes.ModelOverview)" title="@LocalizationManager.Localize("ConfigurationLayout_GoToModelOverview")">
                    <h5 class="card-title">@modelHeader</h5>
                </a>
                <div class="card-text">
                    <strong data-bind="if: (configViewModel.selectedAccessories().length > 0)">@LocalizationManager.Localize("ConfigurationLayout_Overview_Extras_Header"):</strong>
                    <div data-bind="foreach: configViewModel.selectedAccessories">
                        <div data-bind="text: name"></div>
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Overview_Paint_Header")</strong>: <span data-bind="text: configViewModel.selectedPaint().name"></span>
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Overview_Rims_Header")</strong>: <span data-bind="text: configViewModel.selectedRims().size"></span>
                    </div>
                    <div class="mt-3">
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_BasePrice_Label")</strong>: <span data-bind="text: formatCurrency(configViewModel.basePrice())"></span>
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_ExtrasPrice_Label")</strong>: <span data-bind="text: formatCurrency(configViewModel.extrasPrice())"></span>
                    </div>
                    <div>
                        <strong>@LocalizationManager.Localize("ConfigurationLayout_Price_Label")</strong>: <span data-bind="text: formatCurrency(configViewModel.fullPrice())"></span>
                    </div>
                </div>
            </div>
            @if (viewKind != ConfigurationViewKind.Overview)
            {
                <a href="@Url.RouteUrl(Constants.Routes.CurrentConfigurationOverview)" class="btn btn-info row">@LocalizationManager.Localize("ConfigurationLayout_GoToOverview")</a>
            }
        </div>
    }
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("/Scripts/app/KoExtenders.js")"></script>
    <script type="text/javascript" src="@Url.Content("/Scripts/app/ConfigurationViewModel.js")"></script>
    <script type="text/javascript" src="@Url.Content("/Scripts/app/Helper.js")"></script>
    @RenderSection("scripts", required: false)
}