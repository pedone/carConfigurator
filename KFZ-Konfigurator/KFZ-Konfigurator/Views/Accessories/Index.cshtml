@using KFZ_Konfigurator.Models;
@model KFZ_Konfigurator.ViewModels.AccessoriesPageViewModel

@{
    Layout = "~/Views/Shared/_ConfigurationLayout.cshtml";
    ViewBag.Title = LocalizationManager.Localize("AccessoriesTitle");
    ViewBag.BackgroundImage = "engine.png";

    var categories = Enum.GetNames(typeof(AccessoryCategory));
}

@Html.AntiForgeryToken()
<h2>@LocalizationManager.Localize("AccessoriesHeader")</h2>

<div>
    <div class="accordion" id="accessoriesAccordion">
        @foreach (var curCategory in categories)
        {
            <div class="card">
                <div class="card-header btn d-flex align-items-start" role="button" data-target="@string.Format($"#collapse{curCategory}")" data-toggle="collapse">
                    <h5>@(LocalizationManager.LocalizeEnum<AccessoryCategory>(curCategory))</h5>
                </div>
                <div class="collapse" data-parent="#accessoriesAccordion" id="@string.Format($"collapse{curCategory}")">
                    <div class="card-body list-group list-group-flush pr-0">
                        @foreach (var item in Model.Accessories.Where(cur => cur.Category.ToString() == curCategory))
                        {
                            <div class="list-group-item">
                                <div class="row">
                                    <div class="col-auto align-items-center d-flex">
                                        <input type="checkbox"
                                               data-bind="checked: configViewModel.accessoriesById[@item.Id].isSelected, disable: configViewModel.isAccessoryLimitReached() && !configViewModel.accessoriesById[@item.Id].isSelected()" />
                                    </div>
                                    <div class="col" data-bind="click: function() { configViewModel.selectAccessory(@item.Id) }">
                                        <h5 class="card-title">@Html.DisplayFor(_ => item.Name)</h5>
                                        <h6 class="card-text">@Html.DisplayFor(_ => item.Price)</h6>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        let accessories = @Html.Raw(Json.Encode(Model.Accessories));
        let selectedEngineSetting = @Html.Raw(Json.Encode(Model.SelectedEngineSetting));
        let selectedPaint = @Html.Raw(Json.Encode(Model.SelectedPaint));
        let selectedRims = @Html.Raw(Json.Encode(Model.SelectedRims));
        let viewModel = new ConfigurationViewModel({ accessories: accessories, selectedEngineSetting: selectedEngineSetting, selectedPaint: selectedPaint, selectedRims: selectedRims });

        $(document).ready(function () {
            ko.applyBindings({ configViewModel: viewModel });
        });

        $(window).on('beforeunload', function () {
            let antiForgeryToken = getAntiForgeryToken($(document));
            let selectedAccessories = viewModel.selectedAccessoryIds;
            saveViewModel('/Accessories/SetSelectedAccessories', selectedAccessories.length > 0 ? ko.toJSON(selectedAccessories) : null, antiForgeryToken)
                .fail((error) => {
                    console.log('failed to set selected accessories: ' + error.responseText + ' (' + error.statusText + ')');
                    //TODO show alert?
                });
        });
    </script>
}